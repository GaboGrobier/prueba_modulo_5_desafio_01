name: prueba modulo 5 desafio 01

on: 
    pull_request:
         branches:
          -  main
jobs:
    check-code:
        runs-on: ubuntu-latest

        steps:
        - name: obtener codigo
          uses: actions/checkout@v2

        - name: Verificar 
          if: success()
          run: echo "El codigo se pudo obtener"


    instalar-requerimientos:
        runs-on: ubuntu-latest
        needs: check-code

        steps:

            - name: Creando ssh en docker 
              run: |
                mkdir -p ~/.ssh
                echo "${{ secrets.PASSWORD_SERVER }}" > ~/.ssh/id_rsa
                chmod 600 ~/.ssh/id_rsa

            - name: instalar docker 
              run: |
                ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{secrets.USER_SERVER}}@${{ secrets.IP_PUBLICA }} << 'EOF'
                mkdir pruebaM5_01
                sudo apt-get install ca-certificates curl
                sudo install -m 0755 -d /etc/apt/keyrings
                sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
                sudo chmod a+r /etc/apt/keyrings/docker.asc
                echo \
                    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
                    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
                    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
                sudo apt-get update
                sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
                sudo usermod -aG docker $USER
                sudo newgrp docker
                EOF

            - name: Verificar instalacion docker  
              if: success()
              run: echo "Se instalo correctamente Docker "
 

    
    Conectarse:
        runs-on: ubuntu-latest
        needs: instalar-requerimientos

        steps:

        - name: Creando ssh en docker 
          run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.PASSWORD_SERVER }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            

        - name: Copiar Archivos al servidor 
          run: |
            rsync -avz --delete -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" ./DESAFIO_M5_01 ${{ secrets.USER_SERVER }}@${{ secrets.IP_PUBLICA }}:/home/ubuntu/pruebaM5_01/
    

    LevantarServicio:
        runs-on: ubuntu-latest
        needs: Conectarse

        steps:
            - name: SSH commands to deploy
              run: |
                ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${{secrets.USER_SERVER}}@${{ secrets.IP_PUBLICA }} << 'EOF'
                cd /home/ubuntu/pruebaM5_01/
                docker build -t prueba1 .
                docker run -d -p 80:8000 prueba1
                EOF